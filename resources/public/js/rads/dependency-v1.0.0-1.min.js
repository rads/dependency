import*as e from"cherry-cljs/cljs.core.js";import*as A from"cherry-cljs/lib/clojure.set.js";var q=function(l,r){return e.reduce.call(null,function(c,n){let _=n,t=e.nth.call(null,_,0,null),o=e.nth.call(null,_,1,null);return e.assoc.call(null,c,t,e.disj.call(null,o,r))},e.array_map(),e.dissoc.call(null,l,r))},v=function(l,r){let c=e.mapcat.call(null,l,r),n=e.hash_set();for(;;){let _=e.seq.call(null,c);if(e.truth_.call(null,_)){let t=_,o=e.seq.call(null,t),a=e.first.call(null,o),u=e.next.call(null,o),h=a,m=u;if(e.truth_.call(null,e.contains_QMARK_.call(null,n,h))){let s=m,d=n;c=s,n=d;continue}else{let s=e.concat.call(null,m,l.call(null,h)),d=e.conj.call(null,n,h);c=s,n=d;continue}}else return n;break}},M=e.fnil.call(null,e.conj,e.hash_set()),L=function(l,r){let c=l,n=e.__destructure_map.call(null,c),_=e.get.call(null,n,e.keyword("dependencies"));return e.get.call(null,_,r,e.hash_set())},K=function(l,r){let c=l,n=e.__destructure_map.call(null,c),_=e.get.call(null,n,e.keyword("dependents"));return e.get.call(null,_,r,e.hash_set())},N=function(l,r){let c=l,n=e.__destructure_map.call(null,c),_=e.get.call(null,n,e.keyword("dependencies"));return v.call(null,_,e.hash_set(r))},C=function(l,r){let c=l,n=e.__destructure_map.call(null,c),_=e.get.call(null,n,e.keyword("dependencies"));return v.call(null,_,r)},T=function(l,r){let c=l,n=e.__destructure_map.call(null,c),_=e.get.call(null,n,e.keyword("dependents"));return v.call(null,_,e.hash_set(r))},V=function(l,r){let c=l,n=e.__destructure_map.call(null,c),_=e.get.call(null,n,e.keyword("dependents"));return v.call(null,_,r)},U=function(l){let r=l,c=e.__destructure_map.call(null,r),n=e.get.call(null,c,e.keyword("dependencies")),_=e.get.call(null,c,e.keyword("dependents"));return A.union.call(null,e.set.call(null,e.keys.call(null,n)),e.set.call(null,e.keys.call(null,_)))},i=function(l,r){return e.array_map(e.keyword("dependencies"),l,e.keyword("dependents"),r)},X=function(l,r,c){let n=l,_=e.__destructure_map.call(null,n),t=e.get.call(null,_,e.keyword("dependencies")),o=e.get.call(null,_,e.keyword("dependents"));if(e.truth_.call(null,(()=>{let a=e._EQ_.call(null,r,c);return e.truth_.call(null,a)?a:S.call(null,l,c,r)})()))throw e.ex_info.call(null,e.str.call(null,"Circular dependency between ",e.pr_str.call(null,r)," and ",e.pr_str.call(null,c)),e.array_map(e.keyword("reason"),e.keyword("rads.dependency/circular-dependency"),e.keyword("node"),r,e.keyword("dependency"),c));return i.call(null,e.update_in.call(null,t,e.vector(r),M,c),e.update_in.call(null,o,e.vector(c),M,r))},I=function(l,r,c){let n=l,_=e.__destructure_map.call(null,n),t=e.get.call(null,_,e.keyword("dependencies")),o=e.get.call(null,_,e.keyword("dependents"));return i.call(null,e.update_in.call(null,t,e.vector(r),e.disj,c),e.update_in.call(null,o,e.vector(c),e.disj,r))},B=function(l,r){let c=l,n=e.__destructure_map.call(null,c),_=e.get.call(null,n,e.keyword("dependencies")),t=e.get.call(null,n,e.keyword("dependents"));return i.call(null,q.call(null,_,r),q.call(null,t,r))},O=function(l,r){let c=l,n=e.__destructure_map.call(null,c),_=e.get.call(null,n,e.keyword("dependencies")),t=e.get.call(null,n,e.keyword("dependents"));return i.call(null,e.dissoc.call(null,_,r),t)},D=function(){return i.call(null,e.array_map(),e.array_map())},S=function(l,r,c){return e.contains_QMARK_.call(null,N.call(null,l,r),c)},F=function(l,r,c){return e.contains_QMARK_.call(null,T.call(null,l,r),c)},z=function(l){let r=e.list.call(null),c=l,n=e.set.call(null,e.filter.call(null,function(_){return e.empty_QMARK_.call(null,K.call(null,l,_))},U.call(null,l)));for(;;){if(e.truth_.call(null,e.empty_QMARK_.call(null,n)))return r;{let _=e.seq.call(null,n),t=e.seq.call(null,_),o=e.first.call(null,t),a=e.next.call(null,t),u=o,h=a,m=L.call(null,c,u),s=(()=>{let y=m,f=c,p=e.hash_set();for(;;){if(e.truth_.call(null,e.seq.call(null,y))){let k=e.first.call(null,y),w=I.call(null,f,u,k);if(e.truth_.call(null,e.empty_QMARK_.call(null,K.call(null,w,k)))){let g=e.rest.call(null,y),G=w,Q=e.conj.call(null,p,k);y=g,f=G,p=Q;continue}else{let g=e.rest.call(null,y),G=w,Q=p;y=g,f=G,p=Q;continue}}else return e.vector(p,f);break}})(),d=e.nth.call(null,s,0,null),j=e.nth.call(null,s,1,null),x=e.cons.call(null,u,r),E=O.call(null,j,u),b=A.union.call(null,e.set.call(null,h),e.set.call(null,d));r=x,c=E,n=b;continue}break}},R=Number.MAX_VALUE,H=function(l){let r=e.zipmap.call(null,z.call(null,l),e.range.call(null));return function(c,n){return e.compare.call(null,e.get.call(null,r,c,R),e.get.call(null,r,n,R))}};export{i as __GT_graph,X as depend,F as dependent_QMARK_,S as depends_QMARK_,D as graph,L as immediate_dependencies,K as immediate_dependents,U as nodes,B as remove_all,I as remove_edge,q as remove_from_map,O as remove_node,M as set_conj,H as topo_comparator,z as topo_sort,v as transitive,N as transitive_dependencies,C as transitive_dependencies_set,T as transitive_dependents,V as transitive_dependents_set};
